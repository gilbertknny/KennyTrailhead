<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>62.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <name>Assign_Selected_Branch_ID_1</name>
        <label>Assign Selected Branch ID</label>
        <locationX>852</locationX>
        <locationY>384</locationY>
        <assignmentItems>
            <assignToReference>SelectedBranchID</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>FormulaGetBranchID</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Branch_Name</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Selected_Branch_ID_2</name>
        <label>Assign Selected Branch ID</label>
        <locationX>324</locationX>
        <locationY>708</locationY>
        <assignmentItems>
            <assignToReference>SelectedBranchID</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Employee_By_NIK.OutputEmployee.worklocation_code__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>SelectedBranchName</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Employee_By_NIK.OutputEmployee.worklocation_name__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Set_Branch_ID</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Selected_Branch_Name</name>
        <label>Assign Selected Branch Name</label>
        <locationX>852</locationX>
        <locationY>600</locationY>
        <assignmentItems>
            <assignToReference>SelectedBranchName</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Branch_Name.BranchName__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Set_Branch_ID</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Is_Branch_ID_Not_Available</name>
        <label>Is Branch ID Not Available</label>
        <locationX>555</locationX>
        <locationY>276</locationY>
        <defaultConnector>
            <targetReference>Assign_Selected_Branch_ID_1</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>BRANCH EXIST</defaultConnectorLabel>
        <rules>
            <name>BRANCH_NOT_EXIST</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>FormulaGetBranchID</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>FormulaGetBranchID</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Is_User_NIK_Available</targetReference>
            </connector>
            <label>BRANCH NOT EXIST</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Employee_Available</name>
        <label>Is Employee Available</label>
        <locationX>456</locationX>
        <locationY>600</locationY>
        <defaultConnectorLabel>EMPLOYEE NOT EXIST</defaultConnectorLabel>
        <rules>
            <name>EMPLOYEE_EXIST</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Employee_By_NIK.OutputEmployee</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Selected_Branch_ID_2</targetReference>
            </connector>
            <label>EMPLOYEE EXIST</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_User_NIK_Available</name>
        <label>Is User NIK Not Available</label>
        <locationX>258</locationX>
        <locationY>384</locationY>
        <defaultConnector>
            <targetReference>Get_Employee_By_NIK</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>NIK EXIST</defaultConnectorLabel>
        <rules>
            <name>NIK_NOT_EXIST</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>FormulaGetOwnerNIK</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>FormulaGetOwnerNIK</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <label>NIK NOT EXIST</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>FormulaGetBranchID</name>
        <dataType>String</dataType>
        <expression>IF(
    NOT(ISBLANK({!$Record.Federated_Owner__c})),
    {!$Record.Federated_Owner__r.BranchId__c},
    {!$Record.Owner.BranchId__c}
)</expression>
    </formulas>
    <formulas>
        <name>FormulaGetOwnerNIK</name>
        <dataType>String</dataType>
        <expression>IF(
    NOT(ISBLANK({!$Record.Federated_Owner__c})),
    {!$Record.Federated_Owner__r.FederationIdentifier},
    {!$Record.Owner.FederationIdentifier}
)</expression>
    </formulas>
    <interviewLabel>[Tgr] Set Branch ID After New Opportunity New {!$Flow.CurrentDateTime}</interviewLabel>
    <label>[Tgr] Set Branch ID After New Opportunity New</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Branch_Name</name>
        <label>Get Branch Name</label>
        <locationX>852</locationX>
        <locationY>492</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Selected_Branch_Name</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>BranchId__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SelectedBranchID</elementReference>
            </value>
        </filters>
        <filters>
            <field>BranchId__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <sortField>LastModifiedDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Set_Branch_ID</name>
        <label>Set Branch ID</label>
        <locationX>555</locationX>
        <locationY>1068</locationY>
        <inputAssignments>
            <field>BranchId__c</field>
            <value>
                <elementReference>SelectedBranchID</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Branch_Name__c</field>
            <value>
                <elementReference>SelectedBranchName</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <object>Opportunity</object>
        <recordTriggerType>Create</recordTriggerType>
        <scheduledPaths>
            <connector>
                <targetReference>Is_Branch_ID_Not_Available</targetReference>
            </connector>
            <pathType>AsyncAfterCommit</pathType>
        </scheduledPaths>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Draft</status>
    <subflows>
        <name>Get_Employee_By_NIK</name>
        <label>Get Employee By NIK</label>
        <locationX>456</locationX>
        <locationY>492</locationY>
        <connector>
            <targetReference>Is_Employee_Available</targetReference>
        </connector>
        <flowName>API_Get_Employee_By_NIK</flowName>
        <inputAssignments>
            <name>InputNIK</name>
            <value>
                <elementReference>FormulaGetOwnerNIK</elementReference>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <variables>
        <name>SelectedBranchID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>SelectedBranchName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
